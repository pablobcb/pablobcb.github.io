Elm.Chess = Elm.Chess || {};
Elm.Chess.SpecialMove = Elm.Chess.SpecialMove || {};
Elm.Chess.SpecialMove.make = function (_elm) {
   "use strict";
   _elm.Chess = _elm.Chess || {};
   _elm.Chess.SpecialMove = _elm.Chess.SpecialMove || {};
   if (_elm.Chess.SpecialMove.values)
   return _elm.Chess.SpecialMove.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Chess.SpecialMove",
   $Basics = Elm.Basics.make(_elm),
   $Chess$Board = Elm.Chess.Board.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var Promotion = function (a) {
      return {ctor: "Promotion"
             ,_0: a};
   };
   var Castling = function (a) {
      return {ctor: "Castling"
             ,_0: a};
   };
   var EnPassant = function (a) {
      return {ctor: "EnPassant"
             ,_0: a};
   };
   _elm.Chess.SpecialMove.values = {_op: _op
                                   ,EnPassant: EnPassant
                                   ,Castling: Castling
                                   ,Promotion: Promotion};
   return _elm.Chess.SpecialMove.values;
};