Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Chess$Game = Elm.Chess.Game.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $Time = Elm.Time.make(_elm),
   $Update = Elm.Update.make(_elm),
   $View = Elm.View.make(_elm);
   var ticker = $Signal.map(function (_v0) {
      return function () {
         return $Update.UpdateTimer;
      }();
   })($Time.every($Time.second));
   var inbox = $Signal.mailbox($Update.UpdateTimer);
   var actions = inbox.signal;
   var model = A3($Signal.foldp,
   $Update.update,
   $Chess$Game.makeInitialGame,
   A2($Signal.merge,
   actions,
   ticker));
   var main = A2($Signal.map,
   $View.renderGame(inbox.address),
   model);
   _elm.Main.values = {_op: _op
                      ,main: main};
   return _elm.Main.values;
};